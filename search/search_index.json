{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"],"fields":{"title":{"boost":1000.0},"text":{"boost":1.0},"tags":{"boost":1000000.0}}},"docs":[{"location":"","title":"Home","text":"<p>Placeholder file for index redirect functionality.</p>"},{"location":"arduino_example/","title":"Arduino Example","text":"<p>Now that we have our library and board add-on installed, we can start experimenting with the breakout board. For the scope of this tutorial, we will highlight the example in the Arduino Library to get started.</p>"},{"location":"arduino_example/#upload-arduino-example","title":"Upload Arduino Example","text":"<p>After unzipping the compressed files, navigate to the example: File &gt; Examples &gt; SparkFun Qwiic Power Switch Arduino Library &gt; Example1_PowerOnOff. This example allows you to toggle power and isolate the I<sup>2</sup>C lines for the OUT port through a serial terminal. The example also allows you to read GPIO1 and GPIO2.</p> <p>For users using an Arduino microcontroller, select your board in the Tools menu (in our case the SparkFun ESP32 Thing Plus C) and the correct Port it enumerated on.</p> <p>You can also copy or paste the code as shown below. Then click \"Upload\".</p> <pre><code>    /*\n      Using the Qwiic Power Switch\n      By: Paul Clark (PaulZC)\n      Date: April 23rd, 2020\n\n      Based extensively on:\n      Using the PCA9536 -- Digital Output\n      By: Jim Lindblom\n      SparkFun Electronics\n      Date: May 4, 2018\n\n      License: This code is public domain but you buy me a beer if you use this and we meet someday (Beerware license).\n\n      This example demonstrates how to use the Qwiic Power Switch and read the additional GPIO pins\n\n      Hardware Connections:\n      Attach your Arduino to the Qwiic Power Switch IN\n      Plug your Qwiic device into the Qwiic Power Switch OUT\n      https://www.sparkfun.com/products/15081\n    */\n\n    #include &lt;Wire.h&gt;\n\n    #include &lt;SparkFun_Qwiic_Power_Switch_Arduino_Library.h&gt;\n\n    QWIIC_POWER mySwitch;\n\n    void setup(void)\n    {\n      Serial.begin(115200);\n      while (!Serial)\n        ; //Wait for user to open terminal\n      Serial.println(F(\"Qwiic Power Switch Example\"));\n\n      Wire.begin();\n\n      if (mySwitch.begin() == false) //Connect to the power switch using Wire port\n      {\n        Serial.println(F(\"Qwiic Power Switch not detected at default I2C address. Please check wiring. Freezing.\"));\n        while (1)\n          ;\n      }\n\n      // Configure GPIO1 and GPIO2 as INPUT\n      mySwitch.pinMode(1, INPUT);\n      mySwitch.pinMode(2, INPUT);\n\n      Serial.println(F(\"1) Enable power and I2C\"));\n      Serial.println(F(\"2) Disable power and I2C\"));\n      Serial.println(F(\"3) Enable I2C isolation\"));\n      Serial.println(F(\"4) Disable I2C isolation\"));\n    }\n\n    void loop()\n    {\n      if (Serial.available())\n      {\n        byte incoming = Serial.read();\n\n        if (incoming == '1')\n        {\n          // Switch the power on\n          mySwitch.powerOn();\n          Serial.println(F(\"Power is ON. I2C isolation is disabled.\"));\n        }\n        else if (incoming == '2')\n        {\n          // Switch the power off\n          mySwitch.powerOff();\n          Serial.println(F(\"Power is OFF. I2C isolation is enabled.\"));\n        }\n        else if (incoming == '3')\n        {\n          // Enable I2C isolation = I2C bus _is_ isolated\n          mySwitch.isolationOn();\n          Serial.println(F(\"I2C isolation enabled. I2C is isolated.\"));\n        }\n        else if (incoming == '4')\n        {\n          // Disable I2C isolation = I2C bus _is not_ isolated\n          mySwitch.isolationOff();\n          Serial.println(F(\"I2C isolation disabled. I2C is not isolated.\"));\n        }\n\n        // Read and print the GPIO1/GPIO2 state\n        Serial.print(F(\"GPIO1 is: \"));\n        Serial.println(mySwitch.digitalRead(1));\n        Serial.print(F(\"GPIO2 is: \"));\n        Serial.println(mySwitch.digitalRead(2));\n\n        // Read any extra Serial bytes (e.g. CR or LF)\n        while (Serial.available() &gt; 0)\n        {\n          Serial.read();\n        }\n      }\n    }\n</code></pre> <p>Tip</p> <p>Instead of reading GPIO1 and GPIO2, you can write to the GPIO pins to set the pins HIGH or LOW. You will need to change the following lines of code in the <code>setup()</code> and <code>loop()</code> functions where the GPIO1 and GPIO2 are initialized and read.</p> <pre><code>setup(){\n  .\n  .\n  .\n  // Configure GPIO1 and GPIO2 as INPUT\n  mySwitch.pinMode(1, INPUT);\n  mySwitch.pinMode(2, INPUT);\n  .\n  .\n  .\n}\n\nvoid loop() {\n      .\n      .\n      .\n      // Read and print the GPIO1/GPIO2 state\n      Serial.print(F(\"GPIO1 is: \"));\n      Serial.println(mySwitch.digitalRead(1));\n      Serial.print(F(\"GPIO2 is: \"));\n      Serial.println(mySwitch.digitalRead(2));\n      .\n      .\n      .\n}\n</code></pre> <p>Instead of an INPUT, you will change each GPIO pin as an OUTPUT. Additionally, you will need to set the pin as a HIGH or LOW.</p> <pre><code>setup(){\n  .\n  .\n  .\n  // Configure GPIO1 and GPIO2 as OUTPUT\n  mySwitch.pinMode(1, OUTPUT);\n  mySwitch.pinMode(2, OUTPUT);\n  .\n  .\n  .\n}\n\nvoid loop() {\n      .\n      .\n      .\n      // Write to GPIO1 &amp; GPIO2\n      Serial.println(F(\"GPIO1 is set to HIGH.\"));\n      mySwitch.digitalWrite(1, HIGH);\n      Serial.println(F(\"GPIO2 is set to LOW.\"));\n      mySwitch.digitalWrite(2, LOW);\n      .\n      .\n      .\n}\n</code></pre> <p>To test, simply attach an LED with a current limiting resistor between the GPIO and GND. The LED should light up when the pin is HIGH and turn off when set to LOW. Of course, you can also connect a multimeter set to read the voltage between the GPIO pin nd GND. The GPIO pin should read 3.3V when set to HIGH and 0V when set to LOW.</p> <p>After uploading the code, open the Serial Monitor or terminal emulator of your choice with the baud rate set to 115200. You will be presented with a few options to configure the Qwiic Power Switch:</p> <ul> <li>1 \u2014 Power is ON I2C isolation is disabled.</li> <li>2 \u2014 Power is OFF. I2C isolation is enabled.</li> <li>3 \u2014 I2C isolation enabled. I2C is isolated.</li> <li>4 \u2014 I2C isolation disabled. I2C is not isolated.</li> </ul> Qwiic Power Switch Configuration with Arduino ESP32 <p>Let's send a 2 to turn power off the Qwiic Power Switch's output and isolate the I<sup>2</sup>C data and clock lines. The Arduino will output a message: \"Power is OFF. I2C isolation is enabled.\" The Arduino will also read the Qwiic Power Switch's GPIO1 and GPIO2. In this case, there was nothing connected to either GPIO so the pin reading was <code>1</code> indicating a HIGH. If there was a logic LOW, the pin would read <code>0</code> indicating a LOW.</p> Qwiic Power Switch Output OFF, I<sup>2</sup>C Isolated, and GPIO Readings with Arduino ESP32 <p>If the Qwiic-enabled board includes a built-in LED, you can see if power is enabled. The power LED (as well as any other LED on the board) should have turned off as soon as power is disabled at the OUT port. In this case, the Qwiic Power Switch's OUT and ZED-F9P's LEDs when power was disabled and I<sup>2</sup>C isolation is enabled.</p> Qwiic Power Switch OUT and ZED-F9P LEDs Turning OFF <p>Note</p> <p>If power is OFF at the OUT port but you decide to disable I<sup>2</sup>C isolation, you may notice a voltage at the 3.3V OUT pin from the pull-up resistors connected to the I<sup>2</sup>C lines.</p> <p>If you would like to verify that the I<sup>2</sup>C lines are isolated, try turning the power back on by sending a 1 and then sending a 3 to isolate the I<sup>2</sup>C lines. While still applying power to the Qwiic Power Switch, try re-uploading code to the Arduino for the Qwiic-enabled board that is connected to the Qwiic Power Switch's OUT. Assuming that the example code checks for the Qwiic-enabled device, you should receive a message indicating that the Qwiic-enabled device was not detected.</p> <p>Note</p> <p>Of course, you could also use the Arduino I2C scanner to scan the I<sup>2</sup>C bus and detect I<sup>2</sup>C devices. When scanning, you should only see the Qwwic Power Switch and anything that was connected before the IN port. Anything after the OUT will not be detected on the OUT port if power was disabled or the lines were isolated.</p>"},{"location":"arduino_library/","title":"Setting Up Arduino","text":"<p>Arduino</p> <p>This example assumes you are using the latest version of the Arduino IDE on your desktop. If this is your first time using Arduino IDE, library, or board add-on, please review the following tutorials.</p> <ul> <li>Installing the Arduino IDE</li> <li>Installing an Arduino Library</li> <li>Installing Board Definitions in the Arduino IDE</li> </ul> <p>Note</p> <p>If you've never connected an CH340 device to your computer before, you may need to install drivers for the USB-to-serial converter. Check out our section on \"How to Install CH340 Drivers\" for help with the installation.</p> <ul> <li>How to Install CH340 Drivers</li> </ul> <p>SparkFun has written a library to work with the Qwiic Power Switch. You can obtain this library through the Arduino Library Manager by searching for \"SparkFun Qwiic Power Switch\". Find the one written by SparkFun Electronics and install the latest version. Users who prefer to manually install the library can get it from the GitHub Repository or download the .ZIP by clicking the button below:</p> SparkFun Qwiic Power Switch Arduino Library (ZIP)"},{"location":"hard_copy/","title":"Hard copy","text":"<p>Need to download or print our hookup guide?</p> <ul> <li>Print  (Single-Page View)<ul> <li>To save as a <code>*.pdf</code> file, select the Printer or Destination labeled Save as PDF. (Instructions will vary based on the browser)</li> </ul> </li> </ul>"},{"location":"hardware_hookup/","title":"Hardware Hookup","text":"<p>In this section, we will go over how to connect to the Qwiic Power Switch.</p>"},{"location":"hardware_hookup/#connecting-via-qwiic","title":"Connecting Via Qwiic","text":"<p>Insert a Qwiic cable between your Arduino microcontroller and the Qwiic Power Switch's IN port. In this case, we used the SparkFun Thing Plus ESP32- USB-C for the Arduino microcontroller. Then connect Qwiic cable between the Qwiic Power Switch's OUT port to the second Qwiic-enabled device. In this case, we used the ZED-F9P SMA breakout board when toggling power and isolating the I<sup>2</sup>C lines. We also connected an external multiband antenna to the ZED-F9P. When ready, connect a USB cable to the Arduino to program, power, and control the Qwiic Power Switch through a serial terminal.</p> Thing Plus ESP32, Qwiic Power Switch, ZED-F9P Connected via Qwiic <p>Note</p> <p>To isolate any Qwiic-enabled device, you will need to connect the Qwiic-enabled device from the OUT port.</p>"},{"location":"hardware_hookup/#connecting-via-pth","title":"Connecting via PTH","text":"<p>For temporary connections to the PTHs, you could use IC hooks to test out the pins. However, you'll need to solder headers or wires of your choice to the board for a secure connection. You can choose between a combination of header pins and jumper wires, or stripping wire and soldering the wire directly to the board.</p> <ul> <li> <p> </p> <p> How to Solder: Through Hole Soldering </p> </li> </ul> <ul> <li> <p> </p> <p> Working with Wire </p> </li> </ul>"},{"location":"hardware_overview/","title":"Hardware Overview","text":"<p>In this section, we will highlight the hardware and pins that are broken out on the SparkFun Qwiic Power Switch. For more information, check out our Resources and Going Further on the components used on the breakout board.</p> Top View Bottom View"},{"location":"hardware_overview/#power","title":"Power","text":"<p>To power the board, we recommend applying 3.3V to the 3.3V pin on the side labeled IN. While the IC's operating voltage is 2.3V to 5.5V, we recommend limiting the input voltage to 3.3V for the Qwiic Connect System. Below are the power pins that are broken out on the edge of the board.</p> <ul> <li>IN - 3.3V \u2014 This pin is the voltage input for the board. The recommended input voltage for this pin is 3.3V.</li> <li>OUT - 3.3V \u2014 This pin is the voltage output for the board. When the PCA9536 GPIO0 enables the transistor, any Qwiic enabled device that is connected to this side of the board will be powered by 3.3V.</li> <li>GND \u2014 Of course, is the common, ground voltage (0V reference) for the system.</li> </ul> Power, Ground, Transistor, and Qwiic Connector Highlighted"},{"location":"hardware_overview/#qwiic-and-i2c","title":"Qwiic and I<sup>2</sup>C","text":"<p>The board includes two horizontal Qwiic connectors to connect Qwiic-enabled I<sup>2</sup>C devices. However, the board still breaks out 0.1\"-spaced pins for users who prefer a soldered connection. The PCA9306 dual bidirectional I<sup>2</sup>C bus voltage level translator (the 8-pin IC closer to IN by the SDA and 3.3V PTHs) is included between the input and output Qwiic connectors. This acts as a bus isolator between the input and output pins for the data and clock lines. This prevents the pull-up resistors from feeding parasitic power to your Qwiic-enabled boards. The Qwiic Power Switch can also be used to isolate a 400kHz bus from a 100kHz bus; the slower bus on the output of the Qwiic Power Switch can be disconnected during fast-mode communication without disabling power.</p> <ul> <li>IN<ul> <li>SCL \u2014 I<sup>2</sup>C clock on the PCA9306's input side.</li> <li>SDA \u2014 I<sup>2</sup>C data on the PCA9306's input side.</li> <li>3.3V \u2014 This pin is the voltage input for the board. The recommended input voltage for this pin is 3.3V.</li> </ul> </li> <li>OUT<ul> <li>SCL \u2014 I<sup>2</sup>C clock on the PCA9306's output side.</li> <li>SDA \u2014 I<sup>2</sup>C data on the PCA9306's output side.</li> <li>3.3V \u2014 This pin is the voltage output for the board. When the PCA9536 GPIO0 enables the transistor, any Qwiic enabled device that is connected to this side of the board will be powered by 3.3V.</li> </ul> </li> <li>GND \u2014 Of course, is the common, ground voltage (0V reference) for the system. The GND PTHs are connected to both IN and OUT.</li> </ul> Qwiic Connector, I<sup>2</sup>C, and PCA9306 Highlighted <p>Connected on the input I<sup>2</sup>C bus is the TI PCA9536 4-Bit I<sup>2</sup>C I/O Expander (the bigger 8-pin IC located at the center of the board). This IC is used to toggle output 3.3V power and the PCA9306 I<sup>2</sup>C isolation. Its I<sup>2</sup>C device's 7-bit unshifted address is 0x41.</p>"},{"location":"hardware_overview/#pca9536-and-gpio-pins","title":"PCA9536 and GPIO Pins","text":"<p>The PCA9536 is a 4-bit GPIO IC that enables users to toggle the following GPIO pins through I<sup>2</sup>C. The I<sup>2</sup>C address of the PCA9536 is 0x41.</p> <ul> <li>GPIO0 \u2014 GPIO0 is connected to the MOSFET power switch. This controls the voltage between the 3.3V input pin and VOUT. When this transistor is turned off, power is removed from the I<sup>2</sup>C output's pull-up resistors.</li> <li>GPIO1 \u2014 GPIO1 is an extra GPIO pin.</li> <li>GPIO2 \u2014 GPIO2 is an extra GPIO pin.</li> <li>GPIO3 \u2014 This pin is connected to the PCA9306. This allows you to isolate the I<sup>2</sup>C output.</li> </ul> PCA9536 and GPIO Pins Highlighted"},{"location":"hardware_overview/#leds","title":"LEDs","text":"<p>The board includes two LEDs to indicate when power is available on the input and output's 3.3V pins. Both can be disabled with the jumpers on the back of the board.</p> LEDs Highlighted"},{"location":"hardware_overview/#jumpers","title":"Jumpers","text":"<p>Note</p> <p>If this is your first time working with jumpers, check out the How to Work with Jumper Pads and PCB Traces tutorial for more information.</p> <p>The back of the board includes jumpers to configure the board.</p> <ul> <li>I<sup>2</sup>C IN \u2014 By default, this three-pad jumper is closed. The three way jumper labeled I<sup>2</sup>C IN connects 3.3V to two 2.2k\u03a9 pull-up resistors and to the I<sup>2</sup>C data and clock lines. If multiple devices are connected to the bus with the pull-up resistors enabled, the parallel equivalent resistance will create too strong of a pull-up for the bus to operate correctly. As a general rule of thumb, disable all but one pair of pull-up resistors if multiple devices are connected to the bus.</li> <li>I<sup>2</sup>C OUT \u2014 By default, this three-pad jumper is closed. Similar to the I<sup>2</sup>C IN jumper, this jumper is connects the VOUT net to two 2.2k\u03a9 pull-up resistors and to the I<sup>2</sup>C data and clock lines. This VOUT is controlled by a MOSFET power switch and PCA9536's GPIO0. When the transistor is turned on, VOUT will connect to the input 3.3V pin.</li> <li>LED IN \u2014 By default, this jumper connects the LED to the input's 3.3V pin. Cutting this trace disables the LED.</li> <li>LED OUT \u2014 By default, this jumper connects the LED to the output's 3.3V pin. Cutting this trace disables the LED.</li> </ul> Jumpers Highlighted"},{"location":"hardware_overview/#board-dimensions","title":"Board Dimensions","text":"<p>The board is 1.0\" x 1.0\" (25.4mm x 25.4mm). There are 2x mounting holes. You can use 4-40 standoffs to mount the board to a panel or enclosure.</p> Board Dimensions"},{"location":"introduction/","title":"Introduction","text":"<p>Many of our Qwiic products draw very little current when in standby, but there are some that draw considerably more. Products like our top-end u-blox GNSS boards in particular. There are times when you wish you could switch them off to save power, and the SparkFun Qwiic Power Switch (QPS) allows you to do exactly that!</p> <ul> <li> <p> </p> <p> SparkFun Qwiic Power Switch    PRT-26784    Purchase from SparkFun  </p> </li> </ul> <p>In this tutorial, we'll go over the hardware and how to hookup the SparkFun Qwiic Power Switch to an Arduino. We will also go over an Arduino example to get started.</p>"},{"location":"introduction/#required-materials","title":"Required Materials","text":"<p>To follow along with this tutorial, you will need the following materials. You may not need everything though depending on what you have. Add it to your cart, read through the guide, and adjust the cart as necessary.</p> <ul> <li> <p> </p> <p> Reversible USB A to C Cable - 2m    CAB-15424 </p> </li> </ul> <ul> <li> <p> </p> <p> SparkFun Thing Plus - ESP32 WROOM (USB-C)    WRL-20168 </p> </li> </ul> <ul> <li> <p> </p> <p> SparkFun Qwiic Power Switch    PRT-26784 </p> </li> </ul> <ul> <li> <p> </p> <p> Qwiic Cable - 100mm    PRT-14427 </p> </li> </ul> <p>You will also need a Qwiic-enabled device and an additional Qwiic cable. In this case, we used a ZED-F9P for demonstration purposes. Of course, you could use a different Qwiic-enabled device.</p> <ul> <li> <p> </p> <p> SparkFun GPS-RTK-SMA Breakout - ZED-F9P (Qwiic)    GPS-16481 </p> </li> </ul> <ul> <li> <p> </p> <p> GNSS L1/L2 Multi-Band Magnetic Mount Antenna - 5m (SMA)    GPS-15192 </p> </li> </ul> <ul> <li> <p> </p> <p> Qwiic Cable - 500mm    PRT-14429 </p> </li> </ul>"},{"location":"introduction/#qwiic-cables","title":"Qwiic Cables","text":"<p>For those that want to take advantage of the Qwiic connector, you'll want to grab a Qwiic cable. There are a variety of other cable lengths available in the SparkFun catalog to choose from.</p> <ul> <li> <p> </p> <p> SparkFun Qwiic Cable Kit    KIT-15081 </p> </li> </ul> <ul> <li> <p> </p> <p> Qwiic Cable - 100mm    PRT-14427 </p> </li> </ul> <ul> <li> <p> </p> <p> Qwiic Cable - 500mm    PRT-14429 </p> </li> </ul> <ul> <li> <p> </p> <p> Qwiic Cable - Breadboard Jumper (4-pin)    PRT-14425 </p> </li> </ul>"},{"location":"introduction/#tools-optional","title":"Tools (Optional)","text":"<p>For users connecting to the plated through holes, you will need a soldering iron, solder, and general soldering accessories.</p> <ul> <li> <p> </p> <p> PINECIL Soldering Iron Kit    TOL-24063 </p> </li> </ul> <ul> <li> <p> </p> <p> Solder Lead Free - 15-gram Tube    TOL-09163 </p> </li> </ul> <ul> <li> <p> </p> <p> Hook-Up Wire - Assortment (Stranded, 22 AWG)    PRT-11375 </p> </li> </ul> <ul> <li> <p> </p> <p> Wire Strippers - 30AWG (Hakko)    TOL-12630 </p> </li> </ul> <ul> <li> <p> </p> <p> Flush Cutters - Hakko    TOL-11952 </p> </li> </ul> <ul> <li> <p> </p> <p> Digital Multimeter - Basic    TOL-12966 </p> </li> </ul>"},{"location":"introduction/#prototyping-accessories-optional","title":"Prototyping Accessories  (Optional)","text":"<p>Depending on your setup, you may want to use IC hooks for a temporary connection. However, you will want to solder header pins to connect devices to the plated through holes for a secure connection.</p> <ul> <li> <p> </p> <p> Breadboard - Self-Adhesive (White)    PRT-12002 </p> </li> </ul> <ul> <li> <p> </p> <p> IC Hook with Pigtail    CAB-09741 </p> </li> </ul> <ul> <li> <p> </p> <p> Break Away Male Headers - Right Angle    PRT-00553 </p> </li> </ul> <ul> <li> <p> </p> <p> Female Headers    PRT-00115 </p> </li> </ul> <ul> <li> <p> </p> <p> Jumper Wires Premium 6\" M/M Pack of 10    PRT-08431 </p> </li> </ul> <ul> <li> <p> </p> <p> Jumper Wires Premium 6\" M/F Pack of 10    PRT-09140 </p> </li> </ul>"},{"location":"introduction/#suggested-reading","title":"Suggested Reading","text":"<p>If you aren't familiar with the Qwiic Connection System, we recommend reading here for an overview.</p> Qwiic Connection System <p>If you aren\u2019t familiar with the following concepts, we also recommend checking out a few of these tutorials before continuing.</p> <ul> <li> <p> </p> <p> How to Solder: Through-Hole Soldering </p> </li> </ul> <ul> <li> <p> </p> <p> Installing Arduino IDE </p> </li> </ul> <ul> <li> <p> </p> <p> ESP32 Thing Plus (USB-C) Hookup Guide </p> </li> </ul> <ul> <li> <p> </p> <p> Installing Board Definitions in the Arduino IDE </p> </li> </ul> <ul> <li> <p> </p> <p> How to Install CH340 Drivers </p> </li> </ul> <ul> <li> <p> </p> <p> Serial Peripheral Interface (SPI) </p> </li> </ul> <ul> <li> <p> </p> <p> Logic Levels </p> </li> </ul>"},{"location":"resources/","title":"Resources","text":"<p>Now that you've successfully got your SparkFun Qwiic Power Switch up and running, it's time to incorporate it into your own project! For more information, check out the resources below:</p> <ul> <li>Schematic (PDF)</li> <li>Eagle Files (ZIP)</li> <li>Board Dimensions (PNG)</li> <li>Component Datasheets<ul> <li>PCA9536 4-Bit I<sup>2</sup>C and SMBus I/O Expander (PDF)</li> <li>PCA9306 Dual Bidirectional I<sup>2</sup>C Bus and SMBus Voltage-Level Translator (PDF)</li> <li>DMG2305UX P-Channel MOSFET (PDF)</li> </ul> </li> <li>Arduino Library</li> <li>GitHub Hardware Repo</li> </ul>"},{"location":"single_page/","title":"Introduction","text":"<p>Many of our Qwiic products draw very little current when in standby, but there are some that draw considerably more. Products like our top-end u-blox GNSS boards in particular. There are times when you wish you could switch them off to save power, and the SparkFun Qwiic Power Switch (QPS) allows you to do exactly that!</p> <ul> <li> <p> </p> <p> SparkFun Qwiic Power Switch    PRT-26784    Purchase from SparkFun  </p> </li> </ul> <p>In this tutorial, we'll go over the hardware and how to hookup the SparkFun Qwiic Power Switch to an Arduino. We will also go over an Arduino example to get started.</p>"},{"location":"single_page/#required-materials","title":"Required Materials","text":"<p>To follow along with this tutorial, you will need the following materials. You may not need everything though depending on what you have. Add it to your cart, read through the guide, and adjust the cart as necessary.</p> <ul> <li> <p> </p> <p> Reversible USB A to C Cable - 2m    CAB-15424 </p> </li> </ul> <ul> <li> <p> </p> <p> SparkFun Thing Plus - ESP32 WROOM (USB-C)    WRL-20168 </p> </li> </ul> <ul> <li> <p> </p> <p> SparkFun Qwiic Power Switch    PRT-26784 </p> </li> </ul> <ul> <li> <p> </p> <p> Qwiic Cable - 100mm    PRT-14427 </p> </li> </ul> <p>You will also need a Qwiic-enabled device and an additional Qwiic cable. In this case, we used a ZED-F9P for demonstration purposes. Of course, you could use a different Qwiic-enabled device.</p> <ul> <li> <p> </p> <p> SparkFun GPS-RTK-SMA Breakout - ZED-F9P (Qwiic)    GPS-16481 </p> </li> </ul> <ul> <li> <p> </p> <p> GNSS L1/L2 Multi-Band Magnetic Mount Antenna - 5m (SMA)    GPS-15192 </p> </li> </ul> <ul> <li> <p> </p> <p> Qwiic Cable - 500mm    PRT-14429 </p> </li> </ul>"},{"location":"single_page/#qwiic-cables","title":"Qwiic Cables","text":"<p>For those that want to take advantage of the Qwiic connector, you'll want to grab a Qwiic cable. There are a variety of other cable lengths available in the SparkFun catalog to choose from.</p> <ul> <li> <p> </p> <p> SparkFun Qwiic Cable Kit    KIT-15081 </p> </li> </ul> <ul> <li> <p> </p> <p> Qwiic Cable - 100mm    PRT-14427 </p> </li> </ul> <ul> <li> <p> </p> <p> Qwiic Cable - 500mm    PRT-14429 </p> </li> </ul> <ul> <li> <p> </p> <p> Qwiic Cable - Breadboard Jumper (4-pin)    PRT-14425 </p> </li> </ul>"},{"location":"single_page/#tools-optional","title":"Tools (Optional)","text":"<p>For users connecting to the plated through holes, you will need a soldering iron, solder, and general soldering accessories.</p> <ul> <li> <p> </p> <p> PINECIL Soldering Iron Kit    TOL-24063 </p> </li> </ul> <ul> <li> <p> </p> <p> Solder Lead Free - 15-gram Tube    TOL-09163 </p> </li> </ul> <ul> <li> <p> </p> <p> Hook-Up Wire - Assortment (Stranded, 22 AWG)    PRT-11375 </p> </li> </ul> <ul> <li> <p> </p> <p> Wire Strippers - 30AWG (Hakko)    TOL-12630 </p> </li> </ul> <ul> <li> <p> </p> <p> Flush Cutters - Hakko    TOL-11952 </p> </li> </ul> <ul> <li> <p> </p> <p> Digital Multimeter - Basic    TOL-12966 </p> </li> </ul>"},{"location":"single_page/#prototyping-accessories-optional","title":"Prototyping Accessories  (Optional)","text":"<p>Depending on your setup, you may want to use IC hooks for a temporary connection. However, you will want to solder header pins to connect devices to the plated through holes for a secure connection.</p> <ul> <li> <p> </p> <p> Breadboard - Self-Adhesive (White)    PRT-12002 </p> </li> </ul> <ul> <li> <p> </p> <p> IC Hook with Pigtail    CAB-09741 </p> </li> </ul> <ul> <li> <p> </p> <p> Break Away Male Headers - Right Angle    PRT-00553 </p> </li> </ul> <ul> <li> <p> </p> <p> Female Headers    PRT-00115 </p> </li> </ul> <ul> <li> <p> </p> <p> Jumper Wires Premium 6\" M/M Pack of 10    PRT-08431 </p> </li> </ul> <ul> <li> <p> </p> <p> Jumper Wires Premium 6\" M/F Pack of 10    PRT-09140 </p> </li> </ul>"},{"location":"single_page/#suggested-reading","title":"Suggested Reading","text":"<p>If you aren't familiar with the Qwiic Connection System, we recommend reading here for an overview.</p> Qwiic Connection System <p>If you aren\u2019t familiar with the following concepts, we also recommend checking out a few of these tutorials before continuing.</p> <ul> <li> <p> </p> <p> How to Solder: Through-Hole Soldering </p> </li> </ul> <ul> <li> <p> </p> <p> Installing Arduino IDE </p> </li> </ul> <ul> <li> <p> </p> <p> ESP32 Thing Plus (USB-C) Hookup Guide </p> </li> </ul> <ul> <li> <p> </p> <p> Installing Board Definitions in the Arduino IDE </p> </li> </ul> <ul> <li> <p> </p> <p> How to Install CH340 Drivers </p> </li> </ul> <ul> <li> <p> </p> <p> Serial Peripheral Interface (SPI) </p> </li> </ul> <ul> <li> <p> </p> <p> Logic Levels </p> </li> </ul>"},{"location":"single_page/#hardware-overview","title":"Hardware Overview","text":"<p>In this section, we will highlight the hardware and pins that are broken out on the SparkFun Qwiic Power Switch. For more information, check out our Resources and Going Further on the components used on the breakout board.</p> Top View Bottom View"},{"location":"single_page/#power","title":"Power","text":"<p>To power the board, we recommend applying 3.3V to the 3.3V pin on the side labeled IN. While the IC's operating voltage is 2.3V to 5.5V, we recommend limiting the input voltage to 3.3V for the Qwiic Connect System. Below are the power pins that are broken out on the edge of the board.</p> <ul> <li>IN - 3.3V \u2014 This pin is the voltage input for the board. The recommended input voltage for this pin is 3.3V.</li> <li>OUT - 3.3V \u2014 This pin is the voltage output for the board. When the PCA9536 GPIO0 enables the transistor, any Qwiic enabled device that is connected to this side of the board will be powered by 3.3V.</li> <li>GND \u2014 Of course, is the common, ground voltage (0V reference) for the system.</li> </ul> Power, Ground, Transistor, and Qwiic Connector Highlighted"},{"location":"single_page/#qwiic-and-i2c","title":"Qwiic and I<sup>2</sup>C","text":"<p>The board includes two horizontal Qwiic connectors to connect Qwiic-enabled I<sup>2</sup>C devices. However, the board still breaks out 0.1\"-spaced pins for users who prefer a soldered connection. The PCA9306 dual bidirectional I<sup>2</sup>C bus voltage level translator (the 8-pin IC closer to IN by the SDA and 3.3V PTHs) is included between the input and output Qwiic connectors. This acts as a bus isolator between the input and output pins for the data and clock lines. This prevents the pull-up resistors from feeding parasitic power to your Qwiic-enabled boards. The Qwiic Power Switch can also be used to isolate a 400kHz bus from a 100kHz bus; the slower bus on the output of the Qwiic Power Switch can be disconnected during fast-mode communication without disabling power.</p> <ul> <li>IN<ul> <li>SCL \u2014 I<sup>2</sup>C clock on the PCA9306's input side.</li> <li>SDA \u2014 I<sup>2</sup>C data on the PCA9306's input side.</li> <li>3.3V \u2014 This pin is the voltage input for the board. The recommended input voltage for this pin is 3.3V.</li> </ul> </li> <li>OUT<ul> <li>SCL \u2014 I<sup>2</sup>C clock on the PCA9306's output side.</li> <li>SDA \u2014 I<sup>2</sup>C data on the PCA9306's output side.</li> <li>3.3V \u2014 This pin is the voltage output for the board. When the PCA9536 GPIO0 enables the transistor, any Qwiic enabled device that is connected to this side of the board will be powered by 3.3V.</li> </ul> </li> <li>GND \u2014 Of course, is the common, ground voltage (0V reference) for the system. The GND PTHs are connected to both IN and OUT.</li> </ul> Qwiic Connector, I<sup>2</sup>C, and PCA9306 Highlighted <p>Connected on the input I<sup>2</sup>C bus is the TI PCA9536 4-Bit I<sup>2</sup>C I/O Expander (the bigger 8-pin IC located at the center of the board). This IC is used to toggle output 3.3V power and the PCA9306 I<sup>2</sup>C isolation. Its I<sup>2</sup>C device's 7-bit unshifted address is 0x41.</p>"},{"location":"single_page/#pca9536-and-gpio-pins","title":"PCA9536 and GPIO Pins","text":"<p>The PCA9536 is a 4-bit GPIO IC that enables users to toggle the following GPIO pins through I<sup>2</sup>C. The I<sup>2</sup>C address of the PCA9536 is 0x41.</p> <ul> <li>GPIO0 \u2014 GPIO0 is connected to the MOSFET power switch. This controls the voltage between the 3.3V input pin and VOUT. When this transistor is turned off, power is removed from the I<sup>2</sup>C output's pull-up resistors.</li> <li>GPIO1 \u2014 GPIO1 is an extra GPIO pin.</li> <li>GPIO2 \u2014 GPIO2 is an extra GPIO pin.</li> <li>GPIO3 \u2014 This pin is connected to the PCA9306. This allows you to isolate the I<sup>2</sup>C output.</li> </ul> PCA9536 and GPIO Pins Highlighted"},{"location":"single_page/#leds","title":"LEDs","text":"<p>The board includes two LEDs to indicate when power is available on the input and output's 3.3V pins. Both can be disabled with the jumpers on the back of the board.</p> LEDs Highlighted"},{"location":"single_page/#jumpers","title":"Jumpers","text":"<p>Note</p> <p>If this is your first time working with jumpers, check out the How to Work with Jumper Pads and PCB Traces tutorial for more information.</p> <p>The back of the board includes jumpers to configure the board.</p> <ul> <li>I<sup>2</sup>C IN \u2014 By default, this three-pad jumper is closed. The three way jumper labeled I<sup>2</sup>C IN connects 3.3V to two 2.2k\u03a9 pull-up resistors and to the I<sup>2</sup>C data and clock lines. If multiple devices are connected to the bus with the pull-up resistors enabled, the parallel equivalent resistance will create too strong of a pull-up for the bus to operate correctly. As a general rule of thumb, disable all but one pair of pull-up resistors if multiple devices are connected to the bus.</li> <li>I<sup>2</sup>C OUT \u2014 By default, this three-pad jumper is closed. Similar to the I<sup>2</sup>C IN jumper, this jumper is connects the VOUT net to two 2.2k\u03a9 pull-up resistors and to the I<sup>2</sup>C data and clock lines. This VOUT is controlled by a MOSFET power switch and PCA9536's GPIO0. When the transistor is turned on, VOUT will connect to the input 3.3V pin.</li> <li>LED IN \u2014 By default, this jumper connects the LED to the input's 3.3V pin. Cutting this trace disables the LED.</li> <li>LED OUT \u2014 By default, this jumper connects the LED to the output's 3.3V pin. Cutting this trace disables the LED.</li> </ul> Jumpers Highlighted"},{"location":"single_page/#board-dimensions","title":"Board Dimensions","text":"<p>The board is 1.0\" x 1.0\" (25.4mm x 25.4mm). There are 2x mounting holes. You can use 4-40 standoffs to mount the board to a panel or enclosure.</p> Board Dimensions"},{"location":"single_page/#hardware-hookup","title":"Hardware Hookup","text":"<p>In this section, we will go over how to connect to the Qwiic Power Switch.</p>"},{"location":"single_page/#connecting-via-qwiic","title":"Connecting Via Qwiic","text":"<p>Insert a Qwiic cable between your Arduino microcontroller and the Qwiic Power Switch's IN port. In this case, we used the SparkFun Thing Plus ESP32- USB-C for the Arduino microcontroller. Then connect Qwiic cable between the Qwiic Power Switch's OUT port to the second Qwiic-enabled device. In this case, we used the ZED-F9P SMA breakout board when toggling power and isolating the I<sup>2</sup>C lines. We also connected an external multiband antenna to the ZED-F9P. When ready, connect a USB cable to the Arduino to program, power, and control the Qwiic Power Switch through a serial terminal.</p> Thing Plus ESP32, Qwiic Power Switch, ZED-F9P Connected via Qwiic <p>Note</p> <p>To isolate any Qwiic-enabled device, you will need to connect the Qwiic-enabled device from the OUT port.</p>"},{"location":"single_page/#connecting-via-pth","title":"Connecting via PTH","text":"<p>For temporary connections to the PTHs, you could use IC hooks to test out the pins. However, you'll need to solder headers or wires of your choice to the board for a secure connection. You can choose between a combination of header pins and jumper wires, or stripping wire and soldering the wire directly to the board.</p> <ul> <li> <p> </p> <p> How to Solder: Through Hole Soldering </p> </li> </ul> <ul> <li> <p> </p> <p> Working with Wire </p> </li> </ul>"},{"location":"single_page/#setting-up-arduino","title":"Setting Up Arduino","text":"<p>Arduino</p> <p>This example assumes you are using the latest version of the Arduino IDE on your desktop. If this is your first time using Arduino IDE, library, or board add-on, please review the following tutorials.</p> <ul> <li>Installing the Arduino IDE</li> <li>Installing an Arduino Library</li> <li>Installing Board Definitions in the Arduino IDE</li> </ul> <p>Note</p> <p>If you've never connected an CH340 device to your computer before, you may need to install drivers for the USB-to-serial converter. Check out our section on \"How to Install CH340 Drivers\" for help with the installation.</p> <ul> <li>How to Install CH340 Drivers</li> </ul> <p>SparkFun has written a library to work with the Qwiic Power Switch. You can obtain this library through the Arduino Library Manager by searching for \"SparkFun Qwiic Power Switch\". Find the one written by SparkFun Electronics and install the latest version. Users who prefer to manually install the library can get it from the GitHub Repository or download the .ZIP by clicking the button below:</p> SparkFun Qwiic Power Switch Arduino Library (ZIP)"},{"location":"single_page/#arduino-example","title":"Arduino Example","text":"<p>Now that we have our library and board add-on installed, we can start experimenting with the breakout board. For the scope of this tutorial, we will highlight the example in the Arduino Library to get started.</p>"},{"location":"single_page/#upload-arduino-example","title":"Upload Arduino Example","text":"<p>After unzipping the compressed files, navigate to the example: File &gt; Examples &gt; SparkFun Qwiic Power Switch Arduino Library &gt; Example1_PowerOnOff. This example allows you to toggle power and isolate the I<sup>2</sup>C lines for the OUT port through a serial terminal. The example also allows you to read GPIO1 and GPIO2.</p> <p>For users using an Arduino microcontroller, select your board in the Tools menu (in our case the SparkFun ESP32 Thing Plus C) and the correct Port it enumerated on.</p> <p>You can also copy or paste the code as shown below. Then click \"Upload\".</p> <pre><code>    /*\n      Using the Qwiic Power Switch\n      By: Paul Clark (PaulZC)\n      Date: April 23rd, 2020\n\n      Based extensively on:\n      Using the PCA9536 -- Digital Output\n      By: Jim Lindblom\n      SparkFun Electronics\n      Date: May 4, 2018\n\n      License: This code is public domain but you buy me a beer if you use this and we meet someday (Beerware license).\n\n      This example demonstrates how to use the Qwiic Power Switch and read the additional GPIO pins\n\n      Hardware Connections:\n      Attach your Arduino to the Qwiic Power Switch IN\n      Plug your Qwiic device into the Qwiic Power Switch OUT\n      https://www.sparkfun.com/products/15081\n    */\n\n    #include &lt;Wire.h&gt;\n\n    #include &lt;SparkFun_Qwiic_Power_Switch_Arduino_Library.h&gt;\n\n    QWIIC_POWER mySwitch;\n\n    void setup(void)\n    {\n      Serial.begin(115200);\n      while (!Serial)\n        ; //Wait for user to open terminal\n      Serial.println(F(\"Qwiic Power Switch Example\"));\n\n      Wire.begin();\n\n      if (mySwitch.begin() == false) //Connect to the power switch using Wire port\n      {\n        Serial.println(F(\"Qwiic Power Switch not detected at default I2C address. Please check wiring. Freezing.\"));\n        while (1)\n          ;\n      }\n\n      // Configure GPIO1 and GPIO2 as INPUT\n      mySwitch.pinMode(1, INPUT);\n      mySwitch.pinMode(2, INPUT);\n\n      Serial.println(F(\"1) Enable power and I2C\"));\n      Serial.println(F(\"2) Disable power and I2C\"));\n      Serial.println(F(\"3) Enable I2C isolation\"));\n      Serial.println(F(\"4) Disable I2C isolation\"));\n    }\n\n    void loop()\n    {\n      if (Serial.available())\n      {\n        byte incoming = Serial.read();\n\n        if (incoming == '1')\n        {\n          // Switch the power on\n          mySwitch.powerOn();\n          Serial.println(F(\"Power is ON. I2C isolation is disabled.\"));\n        }\n        else if (incoming == '2')\n        {\n          // Switch the power off\n          mySwitch.powerOff();\n          Serial.println(F(\"Power is OFF. I2C isolation is enabled.\"));\n        }\n        else if (incoming == '3')\n        {\n          // Enable I2C isolation = I2C bus _is_ isolated\n          mySwitch.isolationOn();\n          Serial.println(F(\"I2C isolation enabled. I2C is isolated.\"));\n        }\n        else if (incoming == '4')\n        {\n          // Disable I2C isolation = I2C bus _is not_ isolated\n          mySwitch.isolationOff();\n          Serial.println(F(\"I2C isolation disabled. I2C is not isolated.\"));\n        }\n\n        // Read and print the GPIO1/GPIO2 state\n        Serial.print(F(\"GPIO1 is: \"));\n        Serial.println(mySwitch.digitalRead(1));\n        Serial.print(F(\"GPIO2 is: \"));\n        Serial.println(mySwitch.digitalRead(2));\n\n        // Read any extra Serial bytes (e.g. CR or LF)\n        while (Serial.available() &gt; 0)\n        {\n          Serial.read();\n        }\n      }\n    }\n</code></pre> <p>Tip</p> <p>Instead of reading GPIO1 and GPIO2, you can write to the GPIO pins to set the pins HIGH or LOW. You will need to change the following lines of code in the <code>setup()</code> and <code>loop()</code> functions where the GPIO1 and GPIO2 are initialized and read.</p> <pre><code>setup(){\n  .\n  .\n  .\n  // Configure GPIO1 and GPIO2 as INPUT\n  mySwitch.pinMode(1, INPUT);\n  mySwitch.pinMode(2, INPUT);\n  .\n  .\n  .\n}\n\nvoid loop() {\n      .\n      .\n      .\n      // Read and print the GPIO1/GPIO2 state\n      Serial.print(F(\"GPIO1 is: \"));\n      Serial.println(mySwitch.digitalRead(1));\n      Serial.print(F(\"GPIO2 is: \"));\n      Serial.println(mySwitch.digitalRead(2));\n      .\n      .\n      .\n}\n</code></pre> <p>Instead of an INPUT, you will change each GPIO pin as an OUTPUT. Additionally, you will need to set the pin as a HIGH or LOW.</p> <pre><code>setup(){\n  .\n  .\n  .\n  // Configure GPIO1 and GPIO2 as OUTPUT\n  mySwitch.pinMode(1, OUTPUT);\n  mySwitch.pinMode(2, OUTPUT);\n  .\n  .\n  .\n}\n\nvoid loop() {\n      .\n      .\n      .\n      // Write to GPIO1 &amp; GPIO2\n      Serial.println(F(\"GPIO1 is set to HIGH.\"));\n      mySwitch.digitalWrite(1, HIGH);\n      Serial.println(F(\"GPIO2 is set to LOW.\"));\n      mySwitch.digitalWrite(2, LOW);\n      .\n      .\n      .\n}\n</code></pre> <p>To test, simply attach an LED with a current limiting resistor between the GPIO and GND. The LED should light up when the pin is HIGH and turn off when set to LOW. Of course, you can also connect a multimeter set to read the voltage between the GPIO pin nd GND. The GPIO pin should read 3.3V when set to HIGH and 0V when set to LOW.</p> <p>After uploading the code, open the Serial Monitor or terminal emulator of your choice with the baud rate set to 115200. You will be presented with a few options to configure the Qwiic Power Switch:</p> <ul> <li>1 \u2014 Power is ON I2C isolation is disabled.</li> <li>2 \u2014 Power is OFF. I2C isolation is enabled.</li> <li>3 \u2014 I2C isolation enabled. I2C is isolated.</li> <li>4 \u2014 I2C isolation disabled. I2C is not isolated.</li> </ul> Qwiic Power Switch Configuration with Arduino ESP32 <p>Let's send a 2 to turn power off the Qwiic Power Switch's output and isolate the I<sup>2</sup>C data and clock lines. The Arduino will output a message: \"Power is OFF. I2C isolation is enabled.\" The Arduino will also read the Qwiic Power Switch's GPIO1 and GPIO2. In this case, there was nothing connected to either GPIO so the pin reading was <code>1</code> indicating a HIGH. If there was a logic LOW, the pin would read <code>0</code> indicating a LOW.</p> Qwiic Power Switch Output OFF, I<sup>2</sup>C Isolated, and GPIO Readings with Arduino ESP32 <p>If the Qwiic-enabled board includes a built-in LED, you can see if power is enabled. The power LED (as well as any other LED on the board) should have turned off as soon as power is disabled at the OUT port. In this case, the Qwiic Power Switch's OUT and ZED-F9P's LEDs when power was disabled and I<sup>2</sup>C isolation is enabled.</p> Qwiic Power Switch OUT and ZED-F9P LEDs Turning OFF <p>Note</p> <p>If power is OFF at the OUT port but you decide to disable I<sup>2</sup>C isolation, you may notice a voltage at the 3.3V OUT pin from the pull-up resistors connected to the I<sup>2</sup>C lines.</p> <p>If you would like to verify that the I<sup>2</sup>C lines are isolated, try turning the power back on by sending a 1 and then sending a 3 to isolate the I<sup>2</sup>C lines. While still applying power to the Qwiic Power Switch, try re-uploading code to the Arduino for the Qwiic-enabled board that is connected to the Qwiic Power Switch's OUT. Assuming that the example code checks for the Qwiic-enabled device, you should receive a message indicating that the Qwiic-enabled device was not detected.</p> <p>Note</p> <p>Of course, you could also use the Arduino I2C scanner to scan the I<sup>2</sup>C bus and detect I<sup>2</sup>C devices. When scanning, you should only see the Qwwic Power Switch and anything that was connected before the IN port. Anything after the OUT will not be detected on the OUT port if power was disabled or the lines were isolated.</p>"},{"location":"single_page/#troubleshooting","title":"Troubleshooting","text":""},{"location":"single_page/#general-troubleshooting-help","title":"General Troubleshooting Help","text":"<p>Note</p> <p>  Not working as expected and need help?  </p> <p>If you need technical assistance and more information on a product that is not working as you expected, we recommend heading on over to the SparkFun Technical Assistance page for some initial troubleshooting. </p> <p>SparkFun Technical Assistance Page</p> <p>If you don't find what you need there, the SparkFun Forums are a great place to find and ask for help. If this is your first visit, you'll need to create a forum account to search product forums and post questions.</p> <p>Log Into SparkFun Forums</p>"},{"location":"single_page/#resources","title":"Resources","text":"<p>Now that you've successfully got your SparkFun Qwiic Power Switch up and running, it's time to incorporate it into your own project! For more information, check out the resources below:</p> <ul> <li>Schematic (PDF)</li> <li>Eagle Files (ZIP)</li> <li>Board Dimensions (PNG)</li> <li>Component Datasheets<ul> <li>PCA9536 4-Bit I<sup>2</sup>C and SMBus I/O Expander (PDF)</li> <li>PCA9306 Dual Bidirectional I<sup>2</sup>C Bus and SMBus Voltage-Level Translator (PDF)</li> <li>DMG2305UX P-Channel MOSFET (PDF)</li> </ul> </li> <li>Arduino Library</li> <li>GitHub Hardware Repo</li> </ul>"},{"location":"troubleshooting/","title":"Troubleshooting","text":""},{"location":"troubleshooting/#general-troubleshooting-help","title":"General Troubleshooting Help","text":"<p>Note</p> <p>  Not working as expected and need help?  </p> <p>If you need technical assistance and more information on a product that is not working as you expected, we recommend heading on over to the SparkFun Technical Assistance page for some initial troubleshooting. </p> <p>SparkFun Technical Assistance Page</p> <p>If you don't find what you need there, the SparkFun Forums are a great place to find and ask for help. If this is your first visit, you'll need to create a forum account to search product forums and post questions.</p> <p>Log Into SparkFun Forums</p>"},{"location":"assets/component_documentation/","title":"SparkFun Documentation","text":"<p>This directory should include any necessary datasheets, example number crunching, etc. </p>"},{"location":"github/contribute/","title":"Contribute: Help Fix our Mistake!","text":"<p>Spot something wrong? Feel free to contribute our open-source design and documentation. </p>"},{"location":"github/contribute/#improve-our-documentation","title":"Improve our Documentation","text":"<p>All of this documentation can be modified by you! Please help us make it better.</p> <ul> <li>These pages are contained in the <code>docs</code> folder of the SparkFun Qwiic Power Switch repository.</li> </ul>"},{"location":"github/contribute/#submit-a-correction","title":"Submit a Correction","text":"<ol> <li>Fork this repo</li> <li>Add your corrections or improvements to the markdown file</li> <li>File a pull request with your changes, and enjoy making the words worlds world a better place.<ul> <li>Once received, the documentation specialist will automatically be notified.</li> <li>We will review your suggested improvements to make sure they are correct and fit within our documentation standards.</li> </ul> </li> </ol>"},{"location":"github/contribute/#improve-our-hardware-design","title":"Improve our Hardware Design","text":"<p>All of our designs are open-source! Please help us make it better.</p> <ul> <li>Our board design files are contained in the <code>Hardware</code> folder of the SparkFun Qwiic Power Switch repository.</li> </ul>"},{"location":"github/contribute/#submit-a-design-improvement","title":"Submit a Design Improvement","text":"<ol> <li>Fork this repo</li> <li>Add your design improvements</li> <li>File a pull request with your changes, and enjoy making the words worlds world a better place.<ul> <li>Once received, the engineer in charge of the original design will automatically be notified.</li> <li>We will review your suggested improvements, if they are within our board design standards and meet our product design requirements, we will flag these changes for our next board revision. (Please note, that even if your suggestion is accepted, these changes may not be immediate. We may have to cycle through our current product inventory first.)</li> </ul> </li> </ol>"},{"location":"github/contribute/#contributors","title":"Contributors","text":"<p>Let's provided some recognition to the contributors for this project!</p> <p> </p>"},{"location":"github/file_issue/","title":"Did we make a mistake?","text":"<p>Spot something wrong? Please let us know. </p> <p>Attention</p> <p>This is not where customers should seek assistance on a product. If you require technical assistance or have questions about a product that is not working as expected, please head over to the SparkFun Technical Assistance page for some initial troubleshooting.  SparkFun Technical Assistance Page </p> <p>If you can't find what you need there, you'll need a Forum Account to search product forums and post questions.</p>"},{"location":"github/file_issue/#discrepancies-in-the-documentation","title":"Discrepancies in the Documentation","text":"<p>All of this documentation can be modified by you! Please help us make it better.</p> <ul> <li>The documentation files for these pages are contained in the <code>docs</code> folder of the SparkFun Qwiic Power Switch repository.</li> </ul>"},{"location":"github/file_issue/#spot-something-wrong","title":"Spot something wrong?","text":"<p>If a section of the documentation is incorrect, please open an issue and let us know.</p>"},{"location":"github/file_issue/#do-you-have-a-suggested-correction","title":"Do you have a suggested correction?","text":"<ol> <li>With a GitHub account, fork this repo</li> <li>Add your correction(s) or improvement(s) to the markdown file(s)</li> <li>File a pull request with your changes, and enjoy making the words worlds world a better place.<ul> <li>Once received, the documentation specialist will automatically be notified.</li> <li>We will review your suggested improvement(s) to make sure they are correct and fit within our documentation standards.</li> </ul> </li> </ol>"},{"location":"github/file_issue/#problems-in-the-hardware-design","title":"Problems in the Hardware Design","text":"<p>All of our designs are open-source! Please help us make it better.</p> <ul> <li>Our board design files are contained in the <code>Hardware</code> folder of the SparkFun Qwiic Power Switch repository.</li> </ul>"},{"location":"github/file_issue/#does-something-not-make-sense","title":"Does something not make sense?","text":"<p>If part of the design is confusing, please open an issue and let us know.</p>"},{"location":"github/file_issue/#did-we-forget-to-include-an-important-function-of-the-board","title":"Did we forget to include an important function of the board?","text":"<ul> <li>Please keep in mind that we may intentionally exclude certain functions of the board to meet our product design requirements. (For example, our Qwiic Micro boards are intended to fit on a small board layout and only use I<sup>2</sup>C communication; therefore, we may not have the SPI and interrupt pins available for users.)</li> <li>If part of the board's functionality is missing, please open an issue and file a feature request.</li> </ul>"},{"location":"github/file_issue/#do-you-wish-to-contribute-directly-to-improving-the-board-design","title":"Do you wish to contribute directly to improving the board design?","text":"<ol> <li>With a GitHub account, Fork this repo</li> <li>Add your design improvement(s)</li> <li>File a pull request with your changes, and enjoy making the words worlds world a better place.<ul> <li>Once received, the engineer in charge of the original design will automatically be notified.</li> <li>We will review your suggested improvement(s), if they are within our board design standards and meet our product design requirements, we will flag these changes for our next board revision. (Please note, that even if your suggestion is accepted, these changes may not be immediate. We may have to cycle through our current product inventory first.)</li> </ul> </li> </ol>"},{"location":"javascript/","title":"javascript directory","text":"<p>This folder should contain the files for the custom javascript that is enabled in the product documentation</p>"}]}